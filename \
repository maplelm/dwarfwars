package settings

import (
	"time"
)

type Cached[T any] struct {
	pollRate    time.Duration
	lastPoll    time.Time
	data        T
	refreshFunc func(*Cached[T]) error
}

func NewCached[T any](pr time.Duration, rf func(*Cached[T]) error) *Cached[T] {
	return &Cached[T]{
		pollRate:    pr,
		lastPoll:    time.Unix(0, 0),
		refreshFunc: rf,
	}
}

func (c *Cached[T]) Get() (T, error) {
	if time.Since(c.lastPoll) >= c.pollRate {
		err := c.refreshFunc(c)
}
